{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","prevProps","name","props","console","debug","info","toUTCString","slice","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBM,GACZA,EAAUC,OAASL,KAAKM,MAAMD,MAEjCE,QAAQC,MAAR,uBAA8BJ,EAAUC,KAAxC,eAAmDL,KAAKM,MAAMD,OAIhEE,QAAQE,KAAKT,KAAKJ,MAAMC,MAAMa,cAAcC,OAAO,IAAK,MApB5D,kCAuBE,WACEV,OAAOW,cAAcZ,KAAKD,WAxB9B,oBA2BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKM,MAAMD,OAGb,YAED,sBAAMQ,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMa,cAAcC,OAAO,IAAK,YArCtD,GAA2BG,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWR,OAAO,GAE3C,MAAM,SAAN,OAAgBM,GAQX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAEHO,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEkB,UAAU,OAG5BE,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEkB,UAAU,SApBhC,kCAwBE,WACEpB,OAAOW,cAAcZ,KAAKD,WAzB9B,oBA4BE,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMyB,UAER,cAAC,EAAD,CACEhB,KAAML,KAAKJ,MAAM0B,mBAnC/B,GAAyBR,IAAMC,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.60101b2b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if ((prevProps.name !== this.props.name)) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock\n          && (\n            <Clock\n              name={this.state.clockName}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}